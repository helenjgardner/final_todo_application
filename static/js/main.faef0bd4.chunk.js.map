{"version":3,"sources":["TotalItemStatus.js","AddItem.js","TaskToDo.js","TaskComplete.js","App.js","index.js"],"names":["TotalItemStatus","className","this","props","count","text","React","Component","AddItem","state","newTaskText","updateTaskText","event","setState","target","value","handleClick","addTaskFunc","id","type","size","maxLength","placeholder","onChange","onClick","TaskToDo","handleClickDel","confirmAlert","title","message","task","buttons","label","deleteTaskFunc","closeOnEscape","closeOnClickOutside","handleClickDone","toggleTaskFunc","handleDateChange","date","setDateDueFunc","handleClickEdit","newText","prompt","editTaskFunc","utils","DateFnsUtils","Grid","container","format","dateDue","minDate","moment","KeyboardButtonProps","TaskComplete","handleClickUnDone","dateDone","App","tasks","addTask","taskText","newTask","completed","add","userid","axios","post","then","response","data","taskID","tasksCopy","slice","push","catch","error","console","log","deleteTask","delete","filter","item","toggleTaskStatus","result","indTask","restTasks","put","setDateDue","editTask","get","tasksToDo","sort","a","b","tasksDone","length","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.faef0bd4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./TotalItemStatus.css\";\n\nclass TotalItemStatus extends React.Component {\n    render() {\n        return (\n            <div className=\"col-12 col-sm-6 red\">\n                {this.props.count} {this.props.text}\n            </div>\n        )\n    }\n}\n\nexport default TotalItemStatus;","import React from \"react\";\nimport \"./AddItem.css\";\n\nclass AddItem extends React.Component {\n    state = {\n        newTaskText: \"\"\n    }\n\n    updateTaskText = (event) => {\n        this.setState({\n            newTaskText: event.target.value\n        })\n    }\n\n    handleClick = () => {\n        this.props.addTaskFunc(this.state.newTaskText);\n        this.setState({\n            newTaskText: \"\"\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12 col-sm-9\">\n                    <div className=\"mt-3\">\n                        <input\n                            id=\"addItemInput\"\n                            type=\"text\"\n                            size=\"85\"\n                            maxLength=\"85\"\n                            className=\"form-control\"\n                            placeholder=\"New task description (max length 85)\"\n                            value={this.state.newTaskText}\n                            onChange={this.updateTaskText}\n                        />\n                    </div>\n                </div>\n                <div className=\"col-12 col-sm-3\">\n                    <div className=\"mt-3 mb-3\">\n                        <button id=\"AddButton\" className=\"btn btn-success\" onClick={this.handleClick}>\n                            Add to list\n                       </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddItem;","import React from \"react\";\nimport \"./TaskToDo.css\";\nimport 'date-fns';\nimport moment from 'moment';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker\n} from '@material-ui/pickers';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\n\n\n\nclass TaskToDo extends React.Component {\n    handleClickDel = () => {\n        confirmAlert({\n            title: 'Delete',\n            message: 'Are you sure you want to delete this task \"' + this.props.task + '\"?',\n            buttons: [\n                {\n                    label: 'Cancel',\n                    onClick: () => { }\n                },\n                {\n                    label: 'Ok',\n                    onClick: () => this.props.deleteTaskFunc(this.props.id)\n                }\n            ],\n            closeOnEscape: true,\n            closeOnClickOutside: true,\n\n        })\n    };\n\n    handleClickDone = () => {\n        // done = true since task was not done and now is\n        this.props.toggleTaskFunc(this.props.id, true);\n    }\n\n    handleDateChange = (date) => {\n        this.props.setDateDueFunc(this.props.id, date);\n    }\n\n    handleClickEdit = () => {\n        var newText = prompt('Update task details', this.props.task);\n        this.props.editTaskFunc(this.props.id, newText)\n    }\n\n    render() {\n        return (\n            <div className=\"row taskList align-items-center rounded\">\n                <div className=\"col-4 col-sm-3 col-md-3 align-middle temp\">\n                    <i className=\"fas fa-trash-alt pad\"\n                        title=\"Delete Task\"\n                        onClick={this.handleClickDel}>\n                    </i>\n                    <i className=\"fas fa-clipboard-check green pad\"\n                        title=\"Mark as Done\"\n                        onClick={this.handleClickDone} >\n                    </i>\n                    <i className=\"fas fa-pencil-alt blue remMarg\"\n                        title=\"Edit\"\n                        onClick={this.handleClickEdit} >\n                    </i>\n                </div>\n\n                <div className=\"col-8 col-sm-4 col-md-4 col-xl-5 remMarg\">\n                    {this.props.task}\n                </div>\n                <div className=\"col-7 col-sm-5 col-md-5 col-xl-4 align-text-bottom remMarg\" >\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <Grid container>\n                            <KeyboardDatePicker\n                                // margin=\"normal\"\n                                id=\"date-picker-dialog\"\n                                label=\"Date Due\"\n                                format=\"dd/MM/yyyy\"\n                                value={this.props.dateDue}\n                                minDate={moment()}\n                                onChange={this.handleDateChange}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Grid>\n                    </MuiPickersUtilsProvider>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default TaskToDo;\n","import React from \"react\";\nimport \"./TaskComplete.css\";\nimport moment from 'moment';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\n\nclass TaskComplete extends React.Component {\n  handleClick = () => {\n    confirmAlert({\n      title: 'Delete',\n      message: 'Are you sure you want to delete this task \"' + this.props.task + '\"?',\n      buttons: [\n        {\n          label: 'Cancel',\n          onClick: () => { }\n        },\n        {\n          label: 'Ok',\n          onClick: () => this.props.deleteTaskFunc(this.props.id)\n        }\n      ],\n      closeOnEscape: true,\n      closeOnClickOutside: true,\n\n    })\n  };\n\n  handleClickUnDone = () => {\n    // done = false since task was done but now isn't\n    this.props.toggleTaskFunc(this.props.id, false);\n  }\n\n  render() {\n    return (\n      <div className=\"row taskList rounded align-items-center\">\n        <div className=\"col-4 col-sm-3 col-md-3\">\n          <i className=\"fas fa-trash-alt pad\" title=\"Delete Task\" onClick={this.handleClick}></i>\n          <i className=\"fas fa-undo blue\" onClick={this.handleClickUnDone}\n            title=\"Mark task incomplete\"></i>\n        </div>\n\n        <div className=\"col-8 col-sm-4 col-md-4 greyItalic remMarg\" >\n          {this.props.task}\n        </div>\n\n        <div className=\"col-7 col-sm-5 col-md-5 greyItalic remMarg\">\n          Done {moment(this.props.dateDone, \"YYYY-MM-DD\").format(\"DD/MM/YYYY\")}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskComplete;","import React from 'react';\nimport './App.css';\n// import uuid from \"uuid/v4\";\nimport TotalItemStatus from './TotalItemStatus';\nimport AddItem from \"./AddItem\";\nimport TaskToDo from \"./TaskToDo\";\nimport TaskComplete from \"./TaskComplete\";\nimport moment from 'moment';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\nimport axios from 'axios';\n\nclass App extends React.Component {\n\n  state = {\n    tasks: []\n  }\n\n  componentDidMount() {\n    // make asynch request to get tasks \n    axios.get('https://ofe1t56so4.execute-api.eu-west-2.amazonaws.com/dev/tasks')\n      .then((response) => {\n        // handle success\n        // console.log(response.data.tasks);\n        this.setState({ tasks: response.data.tasks })\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n  }\n\n  // called when user selects 'add task' - user then updates date due.  Defaulted to a week\n  addTask = (taskText) => {\n    if (taskText === \"\") {\n      confirmAlert({\n        message: 'Task cannot be blank - please try again',\n        buttons: [\n          {\n            label: 'Ok',\n            onClick: () => { }\n          }\n        ],\n        closeOnEscape: true,\n        closeOnClickOutside: true,\n      })\n      return;\n    }\n\n    const newTask = {\n      text: taskText,\n      completed: false,\n      dateDue: moment().add(7, 'days').format(\"YYYY-MM-DD\"),\n      dateDone: \"\",\n      id: \"\",\n      userid: \"helen.gardner\"\n    };\n\n    axios.post('https://ofe1t56so4.execute-api.eu-west-2.amazonaws.com/dev/tasks', newTask)\n      .then((response) => {\n        newTask.id = response.data.taskID;\n        const tasksCopy = this.state.tasks.slice();\n        tasksCopy.push(newTask);\n        this.setState({\n          tasks: tasksCopy\n        })\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // called to delete task whether task is done or not\n  deleteTask = (id) => {\n    axios.delete('https://ofe1t56so4.execute-api.eu-west-2.amazonaws.com/dev/tasks/' + id)\n\n      .then((response) => {\n        const tasksCopy = this.state.tasks.filter(item => {\n          return item.id !== id;\n        });\n        this.setState({\n          tasks: tasksCopy\n        })\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // called to mark as task as done or a complete task as not done\n  toggleTaskStatus = (id, result) => {\n    // if result is true then dealing with task changing from 'not done' to 'done'\n    let indTask = this.state.tasks.filter(item => item.id === id);\n    // completed can be set to result\n    indTask[0].completed = result;\n    // if true then dateDone is set to today, otherwise it's undone and dateDone is blank\n    if (result) indTask[0].dateDone = moment();\n    else {\n      indTask[0].dateDone = '';\n      indTask[0].dateDue = moment().add(7, 'days').format(\"YYYY-MM-DD\");\n    };\n    let restTasks = this.state.tasks.filter(item => item.id !== id);\n    restTasks.push(indTask[0]);\n\n    axios.put('https://ofe1t56so4.execute-api.eu-west-2.amazonaws.com/dev/tasks/' + id, indTask[0])\n      .then((response) => {\n        this.setState({\n          tasks: restTasks\n        })\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // called to set due date\n  setDateDue = (id, date) => {\n    let indTask = this.state.tasks.filter(item => item.id === id);\n    indTask[0].dateDue = date;\n    let restTasks = this.state.tasks.filter(item => item.id !== id);\n    restTasks.push(indTask[0]);\n\n    axios.put('https://ofe1t56so4.execute-api.eu-west-2.amazonaws.com/dev/tasks/' + id, indTask[0])\n      .then((response) => {\n        this.setState({\n          tasks: restTasks\n        })\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // called to edit an incomplete task - user cannot edit a done task\n  editTask = (id, newText) => {\n    if (newText === \"\") {\n      confirmAlert({\n        message: 'Task cannot be blank - please try again',\n        buttons: [\n          {\n            label: 'Ok',\n            onClick: () => { }\n          }\n        ],\n        closeOnEscape: true,\n        closeOnClickOutside: true,\n      })\n      return;\n    }\n    let indTask = this.state.tasks.filter(item => item.id === id);\n    indTask[0].text = newText;\n    let restTasks = this.state.tasks.filter(item => item.id !== id);\n    restTasks.push(indTask[0]);\n\n    axios.put('https://ofe1t56so4.execute-api.eu-west-2.amazonaws.com/dev/tasks/' + id, indTask[0])\n      .then((response) => {\n        this.setState({\n          tasks: restTasks\n        })\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  render() {\n\n    // split tasks into done and not done and sort them\n    const tasksToDo = this.state.tasks.filter(item => { return !item.completed })\n    tasksToDo.sort(function (a, b) { return moment(a.dateDue).format('YYYYMMDD') - moment(b.dateDue).format('YYYYMMDD') })\n    const tasksDone = this.state.tasks.filter(item => { return item.completed })\n    tasksDone.sort(function (a, b) { return moment(a.dateDone).format('YYYYMMDD') - moment(b.dateDone).format('YYYYMMDD') })\n\n    return (\n      <div>\n        <br />\n\n        <div className=\"container \">\n          <div className=\"row rounded title\">\n            <h4> Today's ({moment().format(\"ddd Do MMM\")}) List </h4>\n          </div>\n          <div className=\"row rounded subtitle totalItem\">\n            <TotalItemStatus count={tasksToDo.length} text=\"Tasks Still to Complete\" />\n            <TotalItemStatus count={tasksDone.length} text=\"Tasks Already Done! \" />\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <AddItem addTaskFunc={this.addTask} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-lg-6\" >\n              <div className=\"col-12\">\n                <div className=\"row rounded title\" >\n                  <h5> Tasks Still to Complete </h5>\n                </div>\n                {tasksToDo.map(item => {\n                  return <TaskToDo key={item.id}\n                    id={item.id}\n                    task={item.text}\n                    completed={item.completed}\n                    dateDue={item.dateDue}\n                    deleteTaskFunc={this.deleteTask}\n                    toggleTaskFunc={this.toggleTaskStatus}\n                    setDateDueFunc={this.setDateDue}\n                    editTaskFunc={this.editTask} />\n                })}\n              </div>\n              <br />\n            </div>\n\n            <div className=\"col-12 col-lg-6\">\n              <div className=\"col-12\">\n                <div className=\"row rounded title\" >\n                  <h5> Tasks Already Done!</h5>\n                </div>\n                {tasksDone.map(item => {\n                  return <TaskComplete key={item.id}\n                    id={item.id}\n                    task={item.text}\n                    completed={item.completed}\n                    dateDone={item.dateDone}\n                    deleteTaskFunc={this.deleteTask}\n                    toggleTaskFunc={this.toggleTaskStatus}\n                  />\n                })}\n              </div>\n            </div>\n          </div>\n          <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}